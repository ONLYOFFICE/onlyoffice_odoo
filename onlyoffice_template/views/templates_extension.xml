<odoo>
    <template id="onlyoffice_editor_extension" inherit_id="onlyoffice_odoo.onlyoffice_editor" name="ONLYOFFICE Editor Extension">
        <xpath expr="//div[@id='test']" position="replace">
            <t t-call="onlyoffice_odoo.onlyoffice_layout">
                    <div id="doceditor"></div>
                    <div id="error" class="w-25 m-auto my-5 py-5 d-flex flex-column d-none">
                        <img src="/onlyoffice_odoo/static/svg/logo.svg" alt="ONLYOFFICE logo"></img>
                        <div class="my-3 alert alert-danger">
                            <p>
                                ONLYOFFICE cannot be reached. Please contact admin.
                            </p>
                        </div>
                    </div>
                    <script type="text/javascript" t-att-src="docApiJS"></script>
                    <script type="text/javascript">
                        const createTextForm = (data) => {
                            Asc.scope.data = data;
                            connector.callCommand((data) => {
                                console.log("createTextForm Asc.scope", Asc.scope)
                                var oDocument = Api.GetDocument();
                                var oTextForm = Api.CreateTextForm({
                                    "key": Asc.scope.data.name,
                                    "placeholder": Asc.scope.data.string,
                                    "tip": Asc.scope.data.string,
                                    "tag": Asc.scope.data.model,
                                    //"multiLine": true,
                                    //"autoFit": true
                                });
                                //oTextForm.ToFixed(10 * 240, 2 * 240);
                                oTextForm.SetMultiline(true);
                                oTextForm.ToInline();
                                var oParagraph = Api.CreateParagraph();
                                oParagraph.AddElement(oTextForm);
                                oDocument.InsertContent([oParagraph], true, { "KeepTextOnly": true });
                                
                            });
                        }

                        const createCheckBoxForm = (data) => {
                            Asc.scope.data = data;
                            connector.callCommand((data) => {
                                console.log("createCheckBoxForm Asc.scope", Asc.scope)
                                var oDocument = Api.GetDocument();
                                var oCheckBoxForm = Api.CreateCheckBoxForm({
                                    "key": Asc.scope.data.name,
                                    "tip": Asc.scope.data.string,
                                    "tag": Asc.scope.data.model
                                });
                                oCheckBoxForm.ToInline();
                                var oParagraph = Api.CreateParagraph();
                                oParagraph.AddElement(oCheckBoxForm);
                                oDocument.InsertContent([oParagraph], true, { "KeepTextOnly": true });
                            });
                        }

                        var config = JSON.parse('<t t-out="editorConfig" />');
                        
                        config.editorConfig.customization.submitForm = true;

                        config.events = {
                            onRequestSaveAs: async (event) => {
                                odoo.define('onlyoffice_template.onlyoffice.template', function (require) {
                                    'use strict';
                                    var ajax = require('web.ajax');
                                    ajax.rpc(`/onlyoffice/upload_file_from_url`, {
                                        url: event.data.url,
                                        title: event.data.title
                                    });
                                })
                            },

                            onDocumentReady: () => {
                                console.log("onDocumentReady")
                                window.connector = docEditor.createConnector();
                                window.addEventListener("message", (event) => {
                                    const type = event.data.type;
                                    console.log(type)
                                    if (type === "char" || type === "text") {
                                        createTextForm(event.data);
                                    }
                                    if (type === "boolean") {
                                        createCheckBoxForm(event.data);
                                    }
                                }, false);
                            }
                        };

                        if (window.DocsAPI) {
                            var docEditor = new DocsAPI.DocEditor("doceditor", config);
                        } else {
                            document.getElementById("error").classList.remove("d-none");
                        }
                    </script>
                    <div id="extension"></div>
                </t>
        </xpath>
    </template>
</odoo>